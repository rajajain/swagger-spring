apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "io.spring.dependency-management"
apply plugin: 'application'
sourceCompatibility = 1.7

sourceSets {
    main.java.srcDir "src/main/java"

}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
    }
}

repositories {
    mavenLocal()
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    mavenCentral()
}

dependencies {
    compile project(path: ':swagger-spring', configuration: 'docGenConfig')
    compile("org.springframework.boot:spring-boot-starter-web:1.3.0.RELEASE") {
        exclude module: "servlet-api"
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        exclude module: "spring-web"
        exclude module: "spring-webmvc"
    }
}

artifacts {
    archives jar
}

task listJars << {
    configurations.compile.each { File file -> println file.name }
}

task start(type: JavaExec, dependsOn: classes) {
    main 'com.dev.raja.EntryPoint'
    classpath sourceSets.main.runtimeClasspath
    args '-jar', "$jar.archivePath"
    jvmArgs = ['-XX:+PrintGCDetails', '-XX:+PrintGCTimeStamps', '-verbose:gc', '-XX:+PrintClassHistogram', '-XX:+PrintTenuringDistribution',
               '-XX:+PrintGCApplicationStoppedTime', '-Xloggc:/data/logs/applytics/gc/gc.log', '-XX:+UseGCLogFileRotation', '-XX:NumberOfGCLogFiles=10', '-XX:GCLogFileSize=100M',
               '-XX:+HeapDumpOnOutOfMemoryError', '-XX:+DisableExplicitGC', '-XX:+UseParNewGC', '-XX:+UseConcMarkSweepGC',
               '-XX:+CMSParallelRemarkEnabled', '-XX:+UseCMSInitiatingOccupancyOnly', '-XX:CMSInitiatingOccupancyFraction=75', '-XX:+CMSClassUnloadingEnabled', '-Dfile.encoding=UTF-8']
}
task startServer(type: Exec, dependsOn: jar) {

    executable 'java'
    args '-jar', "$jar.archivePath"

}